@echo off
setlocal

IF NOT ISFUNCTION BATCHDIR function BATCHDIR=`%@IF[%@LEN[%_batchname]==0,%_CWD,%@LEFT[-1,%@PATH["%_batchname"]]]`

:: Check if the plugin is loaded
IFF NOT PLUGIN Hashmap THEN
    echo Loading hashmap plugin...^n
    plugin /L "%@BATCHDIR[]\..\build\cmake-build\hashmap.dll"
    set needUnload=1
ELSE
    set needUnload=0
ENDIFF

set h=%@hashnew[]

echo Adding entries...
set r=%@hashput[%h,foo/bar]
set r=%@hashput[%h,Bob Man/Mary Girl]
set r=%@hashput[%h,Super "Fly^]individual is "writing/Uglyman]
set r=%@hashput[%h,strange^nkey54/normal value]

echo Count = %@hashcount[%h]
echo -------------------------------------
hashentries "%h"
echo -------------------------------------^n

echo Keys:
echo -------------------------------------
hashentries /K %h
echo -------------------------------------^n

echo Values:
echo -------------------------------------
hashentries /V %h
echo -------------------------------------^n

echo Getting...
echo -------------------------------------
echo foo = %@hashget[%h,foo/(missing)]
echo baz = %@hashget[%h,baz/(baz doesn't exist, this is the default)]
echo Bob Man = %@hashget[%h,Bob Man]
echo -------------------------------------^n

echo Deleting Bob Man...
set r=%@hashdel[%h,Bob Man]
echo Count = %@hashcount[%h]
echo -------------------------------------
hashentries %h
echo -------------------------------------^n

echo Clearing...
set r=%@hashclear[%h]
echo Count = %@hashcount[%h]
echo -------------------------------------
hashentries %h
echo -------------------------------------^n
set r=%@hashfree[%h]

IFF %testHandles==1 THEN
    echo Allocating a bunch of handles...
    set n=40
    setarray handles[%n]
    echo -------------------------------------
    DO i = 0 TO %((%n-1))
        set handles[%i]=%@hashnew[]
        echos handles[%@FORMATN[02.0,%i]]=%handles[%i]
        IF %(((%i+1) MOD 5)) == 0 (echo ``) ELSE (echos ` `)
    ENDDO
    echo -------------------------------------^n

    echo Freeing handles...
    DO i = 0 TO %((%n-1)) (set r=%@hashfree[%handles[%i]])

    unsetarray handles
ENDIFF

IFF %testPerf==1 THEN
    set numEntries=1000
    
    echo ======== Hashmap ============
    set h=%@hashnew[16]
    echo Inserting %numEntries entries...
    TIMER /1 /Q ON
    DO i = 0 to %((%numEntries-1))
        set r=%@hashput[%h,key-%i/value-%i]
    ENDDO
    echo The operation took %@TIMER[1,ms]^n
    TIMER /1 /M /Q OFF

    echo Retrieving %numEntries values...
    TIMER /1 /Q ON
    DO i = 0 to %((%numEntries-1))
        set r=%@hashget[%h,key-%i]
    ENDDO
    echo The operation took %@TIMER[1,ms]
    TIMER /1 /M /Q OFF
    set r=%@hashfree[%h]
    echo ==============================^n
    
    echo ======= Unqlite ==============
    set unqDb=":mem:"
    set r=%@UNQOPEN[RWC,%unqDb]
    echo Inserting %numEntries entries...
    TIMER /1 /Q ON
    DO i = 0 to %((%numEntries-1))
        set r=%@UNQKVS[u,%unqDb,"key-%i","value-%i"]
    ENDDO
    echo The operation took %@TIMER[1,ms]^n
    TIMER /1 /M /Q OFF

    echo Retrieving %numEntries values...
    TIMER /1 /Q ON
    DO i = 0 to %((%numEntries-1))
        set r=%@UNQREADS[u,%unqDb,"key-%i"]
    ENDDO
    echo The operation took %@TIMER[1,ms]
    TIMER /1 /M /Q OFF
    set r=%@UNQCLOSE[%unqDb]
    echo ==============================^n
ENDIFF

IF %needUnload==1 (echo Unloading hashmap plugin... & plugin /U hashmap)

endlocal
